package ar.com.plugtree.abfm.poc.domain

import java.util.EnumSet;
import java.util.Set;
import org.drools.planner.core.score.constraint.IntConstraintOccurrence;
import org.drools.planner.core.score.calculator.SimpleScoreCalculator;

global SimpleScoreCalculator scoreCalculator;

rule "sameCity"
    when
        $sd : ServiceDelivery($serviceLoc : location, $tec : technician)
        Technician(this == $tec, location != $serviceLoc)
    then
        insertLogical(new IntConstraintOccurrence("sameCity", 1, $sd, $tec));
end

rule "isBusy"
    when
        $sd : ServiceDelivery($serviceLoc : location, $tec : technician)
        Technician(this == $tec, busy == true)
    then
        insertLogical(new IntConstraintOccurrence("isBusy", 6, $sd, $tec));
end

rule "skillMatch"
    when
        $sd : ServiceDelivery($neededSkills : neededSkills, $tec : technician)
        Technician(this == $tec, $techSkills : skills)
    then
        Set<Skill> tempSkills = EnumSet.copyOf($neededSkills);
        tempSkills.removeAll($techSkills);
        insertLogical(new IntConstraintOccurrence("skillMatch", tempSkills.size(), $sd, $tec));
end

rule "hardConstraintsBroken"
        salience -1 // Do the other rules first (optional, for performance)
    when
        $hardTotal : Number() from accumulate(
            IntConstraintOccurrence($weight : weight),
            sum($weight)
        );
    then
        scoreCalculator.setScore(- $hardTotal.intValue());
end
